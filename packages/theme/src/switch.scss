@use "sass:map";
@use "./common/componentVar.scss" as *;
@use "./common/mixins.scss" as *;

// switch ********************************************************
$switch-width: () !default;
$switch-width: map.deep-merge(
  (
    "sm": 2.375rem,
    "md": 2.875rem,
    "lg": 3.5rem,
    "xl": 4.5rem,
  ),
  $switch-width
);
$switch-height: () !default;
$switch-height: map.deep-merge(
  (
    "sm": 1.25rem,
    "md": 1.5rem,
    "lg": 1.875rem,
    "xl": 2.25rem,
  ),
  $switch-height
);
$switch-font-size: () !default;
$switch-font-size: map.deep-merge(
  (
    "sm": 0.575rem,
    "md": 0.6375rem,
    "lg": 0.9625rem,
    "xl": 1.2875rem,
  ),
  $switch-font-size
);
:root {
  @include set-private-var("switch-width", $switch-width);
  @include set-private-var("switch-height", $switch-height);
  @include set-private-var("switch-font-size", $switch-font-size);
}
@include b(switch) {
  @include set-component-var("switch", switchVars());
  display: inline-flex;
  align-items: center;
  cursor: pointer;
  input {
    display: none;
  }
  @include e(input) {
    height: var(#{getVarName("switch", "height")});
    width: var(#{getVarName("switch", "width")});
    border-radius: var(#{getVarName("switch", "component-round")});
    background-color: var(#{getVarName("switch", "bg-color")});
    transition: 0.3s;
    @include s((disabled, loading)) {
      #{getVarName('switch', 'bg-color')}: var(
        #{getVarName("switch", "disabled-bg-color")}
      );
      #{getVarName('switch', 'text-color')}: var(
        #{getVarName("switch", "disabled-text-color")}
      );
    }
  }
  @include e(handle) {
    padding: 4px;
    position: relative;
    display: block;
    width: 100%;
    height: 100%;
    box-sizing: border-box;
  }
  @include e(button) {
    position: absolute;
    top: 0.125rem;
    left: 0.125rem;
    z-index: 10;
    width: calc(var(#{getVarName("switch", "height")}) - 0.125rem * 2);
    height: calc(var(#{getVarName("switch", "height")}) - 0.125rem * 2);
    background-color: #fff;
    border-radius: var(#{getVarName("switch", "component-round")});
    border: none;
    font-size: var(#{getVarName("switch", "font-size")});
    box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.15);
    padding: 0;
    margin: 0;
    outline: none;
    cursor: pointer;
    // color: var(#{getVarName("switch", "text-color")});
    display: flex;
    align-items: center;
    justify-content: center;
    @include s((checked)) {
      left: 50%;
    }
    > i {
      transform: scale(0.8);
    }
    @include s((disabled)) {
      cursor: not-allowed;
      background-color: var(#{getVarName("switch", "disable-button-bg-color")});
      color: var(#{getVarName("text-color", "light-4")});
    }
  }
  @include e(inner) {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%; // 需要与handle的display: block才能有父容器的100%，否则就按内容自适应
    height: 100%; // 需要与handle的display: block才能有父容器的100%（注意父容器也得有高度，否则就是auto），否则就按内容自适应
    overflow: hidden;
    color: var(#{getVarName("switch", "text-color")});
    > span {
      width: 50%;
      height: 100%;
      font-size: var(#{getVarName("switch", "font-size")});
      display: flex;
      align-items: center;
      justify-content: center;
      text-align: center;
      transition: 0.3s;
    }
    &.transition-scale {
      > span {
        transform: scale(0);
        @include s((checked)) {
          transform: scale(1);
        }
      }
    }
    &.transition-slide {
      > span:first-child {
        transform: translateX(-100%);
        @include s((checked)) {
          transform: translateX(0%);
          + span {
            transform: translateX(100%);
          }
        }
      }
    }
  }

  @each $size in $sizes {
    @include m(size, $size) {
      #{getVarName('switch', 'font-size')}: var(
        #{getVarName("switch-font-size", $size)}
      );
      #{getVarName('switch', 'height')}: var(
        #{getVarName("switch-height", $size)}
      );
      #{getVarName('switch', 'width')}: var(
        #{getVarName("switch-width", $size)}
      );
    }
  }
}

@each $type in $types {
  $classname: ".ue-switch--" + $type;
  #{$classname} {
    @include s((checked)) {
      @include set-component-var("switch", switchVars($type), "type");
    }
    @include s((disabled)) {
      cursor: not-allowed;
      #{getVarName('switch', 'bg-color')}: var(
        #{getVarName("switch", "disabled-bg-color")}
      );
      #{getVarName('switch', 'text-color')}: var(
        #{getVarName("text-color", "white")}
      );
      // @include e(inner-checked) {
      //   #{getVarName("switch", "text-color")}: var(
      //     #{getVarName("switch", "text-color")}
      //   );
      // }
      // #{getVarName('switch', '')}:
    }
  }
}

// @include b(switch) {
//   @include set-component-var("switch", switchVars());
//   display: inline-flex;
//   align-items: center;
//   cursor: pointer;
//   input {
//     display: none;
//   }
//   @include e(input) {
//     height: var(#{getVarName("switch", "height")});
//     min-width: var(#{getVarName("switch", "width")});
//     border-radius: var(#{getVarName("switch", "component-round")});
//     border: none;
//     background-color: var(#{getVarName("switch", "bg-color")});
//     transition: 0.3s;
//   }
//   @include e(handle) {
//     display: block;
//     min-width: var(#{getVarName("switch", "width")});
//     height: var(#{getVarName("switch", "height")});
//     position: relative;
//     border-radius: var(#{getVarName("switch", "component-round")});
//     box-sizing: border-box;
//     // padding: 0.125rem;
//   }
//   @include e(button) {
//     display: inline-block;
//     border: none;
//     outline: none;
//     background-color: #fff;
//     width: calc(var(#{getVarName("switch", "height")}) - 0.125rem * 2);
//     height: calc(var(#{getVarName("switch", "height")}) - 0.125rem * 2);
//     border-radius: var(#{getVarName("switch", "component-round")});
//     position: absolute;
//     left: 0.125rem;
//     top: 0.125rem;
//     z-index: 10;
//     box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.05);
//     padding: 0;
//     margin: 0;
//     // 用于中心圆中添加图标/文本
//     // font-size: ;
//     // color: ;
//     > i {
//       transform: scale(0.8);
//     }
//     @include s((checked)) {
//       left: 50%;
//     }
//     @include s((disabled)) {
//       cursor: not-allowed;
//       background-color: var(#{getVarName("switch", "disable-button-bg-color")});
//     }
//   }
//   @include e(inner) {
//     width: 100%;
//     height: 100%;
//     display: flex;
//     align-items: center;
//     overflow: hidden;
//     user-select: none;
//     color: var(#{getVarName("switch", "text-color")});
//     > span {
//       width: 50%;
//       height: 100%;
//       display: flex;
//       align-items: center;
//       justify-content: center;
//       text-align: center;
//       transition: 0.3s;
//       font-size: var(#{getVarName("switch", "font-size")});
//       > span {
//         line-height: 1;
//       }
//     }
//   }
//   @each $size in $sizes {
//     @include m(size, $size) {
//       #{getVarName('switch', 'width')}: var(
//         #{getVarName("switch-width", $size)}
//       );
//       #{getVarName('switch', 'height')}: var(
//         #{getVarName("switch-height", $size)}
//       );
//       #{getVarName('switch', 'font-size')}: var(
//         #{getVarName("switch-font-size", $size)}
//       );
//     }
//   }
// }

// @each $type in $types {
//   $classname: ".ue-switch--" + $type;
//   #{$classname} {
//     @include s((checked)) {
//       @include set-component-var("switch", switchVars($type), "type");
//     }
//     @include s((disabled)) {
//       cursor: not-allowed;
//       #{getVarName('switch', 'bg-color')}: var(
//         #{getVarName("bg-color", "default-switch")}
//       );
//       #{getVarName('switch', 'text-color')}: var(
//         #{getVarName("text-color", "light-6")}
//       );
//     }
//   }
// }
